{"name":"Node-wd-sync","tagline":"sync version of wd","body":"# wd-sync\r\n\r\nA synchronous version with a nice api of [wd](http://github.com/admc/wd), \r\nthe lightweight  [WebDriver / Selenium2](http://seleniumhq.org/projects/webdriver/) \r\nclient for node.js, built using  [node-fibers](http://github.com/laverdet/node-fibers).\r\n\r\nRemote testing with [Sauce Labs](http://saucelabs.com) also works.\r\n\r\nNote: headless zombie was removed in 1.1.0\r\n\r\n## status\r\n\r\n[![Build Status](https://travis-ci.org/sebv/node-wd-sync.png)](https://travis-ci.org/sebv/node-wd-sync)\r\n[![Selenium Test Status](https://saucelabs.com/buildstatus/node_wd_sync)](https://saucelabs.com/u/node_wd_sync)\r\n\r\n[![Selenium Test Status](https://saucelabs.com/browser-matrix/node_wd_sync.svg)](https://saucelabs.com/u/node_wd_sync)\r\n\r\n## install\r\n\r\n```\r\nnpm install wd-sync\r\n```\r\n\r\n## code samples\r\n\r\n### CoffeeScript\r\n\r\n```coffeescript\r\n# assumes that selenium server is running\r\n\r\nwdSync = require 'wd-sync'\r\n\r\n# 1/ simple Wd example\r\n\r\n{browser, sync} = wdSync.remote()\r\n\r\nsync ->\r\n  console.log \"server status:\", @status()\r\n  @init browserName:'firefox'\r\n  console.log \"session id:\", @getSessionId()\r\n  console.log \"session capabilities:\", @sessionCapabilities()\r\n\r\n  @get \"http://google.com\"\r\n  console.log @title()\r\n\r\n  queryField = @elementByName 'q'\r\n  @type queryField, \"Hello World\"\r\n  @type queryField, \"\\n\"\r\n\r\n  @setWaitTimeout 3000\r\n  @elementByCss '#ires' # waiting for new page to load\r\n  console.log @title()\r\n\r\n  console.log @elementByNameIfExists 'not_exists' # undefined\r\n\r\n  @quit()\r\n\r\n```        \r\n\r\n### JavaScript\r\n\r\n```javascript\r\n// assumes that selenium server is running\r\n\r\nvar wdSync = require('wd-sync');\r\n\r\n// 1/ simple Wd example\r\n\r\nvar client = wdSync.remote()\r\n    , browser = client.browser\r\n    , sync = client.sync;\r\n\r\nsync( function() {\r\n\r\n  console.log(\"server status:\", browser.status());\r\n  browser.init( { browserName: 'firefox'} );\r\n  console.log(\"session id:\", browser.getSessionId());\r\n  console.log(\"session capabilities:\", browser.sessionCapabilities());\r\n\r\n  browser.get(\"http://google.com\");\r\n  console.log(browser.title());\r\n\r\n  var queryField = browser.elementByName('q');\r\n  browser.type(queryField, \"Hello World\");\r\n  browser.type(queryField, \"\\n\");\r\n\r\n  browser.setWaitTimeout(3000);\r\n  browser.elementByCss('#ires'); // waiting for new page to load\r\n  console.log(browser.title());\r\n\r\n  console.log(browser.elementByNameIfExists('not_exists')); // undefined\r\n\r\n  browser.quit();\r\n\r\n});\r\n\r\n``` \r\n\r\n## doc \r\n\r\n* [CoffeeScript](http://github.com/sebv/node-wd-sync/blob/master/doc/COFFEE-DOC.md)\r\n* [JavaScript](http://github.com/sebv/node-wd-sync/blob/master/doc/JS-DOC.md)\r\n* [wd doc](https://github.com/admc/wd/blob/master/README.md)\r\n* [JsonWireProtocol official doc](http://code.google.com/p/selenium/wiki/JsonWireProtocol)\r\n\r\nNote: Doc and README modifications must be done in the doc/template directory.\r\n\r\n## examples\r\n\r\n* [CoffeeScript](http://github.com/sebv/node-wd-sync/tree/master/examples/coffee)\r\n* [JavaScript](http://github.com/sebv/node-wd-sync/tree/master/examples/js)\r\n\r\n## api\r\n\r\n[supported](http://github.com/sebv/node-wd-sync/blob/master/doc/jsonwire-mapping.md)\r\n\r\n[full JsonWireProtocol mapping](http://github.com/sebv/node-wd-sync/blob/master/doc/jsonwire-full-mapping.md)\r\n  \r\n## available environments\r\n\r\n### WebDriver \r\n\r\nlocal [WebDriver / Selenium2](http://seleniumhq.org/projects/webdriver/) server\r\n\r\n### Sauce Labs\r\n\r\nRemote testing with [Sauce Labs](http://saucelabs.com).\r\n\r\n## running tests\r\n\r\n### local / selenium server: \r\n\r\n1/ Install and start Selenium server\r\n\r\n```\r\n./node_modules/.bin/install_selenium\r\n./node_modules/.bin/install_chromedriver\r\n./node_modules/.bin/start_selenium_with_chromedriver\r\n```\r\n\r\n2/ run tests\r\n```\r\nmake test \r\n```\r\n\r\n### remote / Sauce Labs \r\n\r\n1/ configure sauce environment\r\n```\r\nexport SAUCE_USERNAME=<SAUCE_USERNAME>\r\nexport SAUCE_ACCESS_KEY=<SAUCE_ACCESS_KEY>\r\n# if using sauce connect\r\n./node_modules/.bin/install_sauce_connect\r\n./node_modules/.bin/start_sauce_connect\r\n```\r\n\r\n2/ run tests\r\n```\r\nmake test_e2e_sauce\r\nmake test_midway_sauce_connect\r\n```\r\n\r\n## building doc/mapping\r\n\r\n### README + doc\r\n\r\n1/ Update the templates\r\n\r\n2/ run `make build_doc`\r\n\r\n### mappings\r\n\r\n1/ Upgrade wd\r\n\r\n2/ run `make build_mapping`\r\n\r\n## publishing\r\n\r\n```\r\nnpm version [patch|minor|major]\r\ngit push --tags\r\nnpm publish\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}