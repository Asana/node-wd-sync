// Generated by CoffeeScript 1.6.3
(function() {
  var jobStatus, jobUpdate, makeSync, request, _jobStatus, _jobUpdate;

  makeSync = require('make-sync').makeSync;

  request = require('request');

  _jobStatus = function(passed, sessionId, done) {
    var httpOpts;
    if (!env.SAUCE) {
      return done();
    }
    httpOpts = {
      url: 'http://' + env.SAUCE_USERNAME + ':' + env.SAUCE_ACCESS_KEY + '@saucelabs.com/rest/v1/' + env.SAUCE_USERNAME + '/jobs/' + sessionId,
      method: 'PUT',
      headers: {
        'Content-Type': 'text/json'
      },
      body: JSON.stringify({
        passed: passed
      }),
      jar: false
    };
    return request(httpOpts, function(err) {
      if (err) {
        return done(err);
      }
      if (env.VERBOSE) {
        console.log("> job:", sessionId, "marked as " + (typeof passed === "function" ? passed({
          "pass": "fail"
        }) : void 0) + ".");
      }
      return done();
    });
  };

  jobStatus = makeSync(_jobStatus);

  _jobUpdate = function(jsonData, sessionId, done) {
    var httpOpts;
    if (!env.SAUCE) {
      return done();
    }
    httpOpts = {
      url: 'http://' + env.SAUCE_USERNAME + ':' + env.SAUCE_ACCESS_KEY + '@saucelabs.com/rest/v1/' + env.SAUCE_USERNAME + '/jobs/' + sessionId,
      method: 'PUT',
      headers: {
        'Content-Type': 'text/json'
      },
      body: jsonData,
      jar: false
    };
    return request(httpOpts, function(err) {
      if (err) {
        return done(err);
      }
      if (env.VERBOSE) {
        console.log("> job:", sessionId, "marked as " + (typeof passed === "function" ? passed({
          "pass": "fail"
        }) : void 0) + ".");
      }
      return done();
    });
  };

  jobUpdate = makeSync(_jobUpdate);

  module.exports = {
    jobStatus: jobStatus,
    jobUpdate: jobUpdate
  };

}).call(this);
