// Generated by CoffeeScript 1.3.3
(function() {
  var CoffeeScript, Express, Wd, WdWrap, async, express, should, test, wd, _ref;

  _ref = require('../../index'), wd = _ref.wd, Wd = _ref.Wd, WdWrap = _ref.WdWrap;

  should = require('should');

  CoffeeScript = require('coffee-script');

  async = require('async');

  express = require('express');

  test = function(type, browserName) {
    var browser, capabilities;
    browser = null;
    WdWrap = WdWrap({
      "with": (function() {
        return browser;
      })
    });
    capabilities = null;
    it("wd.remote or wd.headless", function(done) {
      switch (type) {
        case 'remote':
          browser = wd.remote();
          browser.on("status", function(info) {
            return console.log("\u001b[36m%s\u001b[0m", info);
          });
          browser.on("command", function(meth, path) {
            return console.log(" > \u001b[33m%s\u001b[0m: %s", meth, path);
          });
          Wd = Wd({
            "with": browser
          });
          return done();
        case 'headless':
          browser = wd.headless();
          Wd = Wd({
            "with": browser
          });
          return done();
      }
    });
    it("init", WdWrap(function() {
      return this.init({
        browserName: browserName
      });
    }));
    it("get", WdWrap(function() {
      return this.get("http://127.0.0.1:8181/element-test-page.html");
    }));
    it("element.text", WdWrap(function() {
      var el;
      el = this.element("id", "text");
      return el.text().should.include("I am some text");
    }));
    it("element.textPresent", WdWrap(function() {
      var el;
      el = this.element("id", "text");
      return (el.textPresent("some text")).should.be["true"];
    }));
    it("element.textPresent", WdWrap(function() {
      var el;
      el = this.element("id", "getAttribute");
      el.should.have.property("getAttribute");
      return (el.getAttribute("att")).should.equal("42");
    }));
    it("element.getValue", WdWrap(function() {
      var el;
      el = this.element("id", "getValue");
      el.should.have.property("getValue");
      return el.getValue().should.equal("value");
    }));
    it("element.sendKeys", WdWrap(function() {
      var el, text;
      text = "keys";
      el = this.element("id", "sendKeys");
      el.should.have.property("sendKeys");
      el.sendKeys(text);
      return el.getValue().should.equal(text);
    }));
    it("element.clear", WdWrap(function() {
      var el;
      el = this.element("id", "clear");
      el.should.have.property("clear");
      el.clear();
      return el.getValue().should.equal("");
    }));
    it("close", WdWrap(function() {
      return this.close();
    }));
    return it("quit", WdWrap(function() {
      return this.quit();
    }));
  };

  Express = (function() {

    function Express() {}

    Express.prototype.start = function(done) {
      this.app = express.createServer();
      this.app.use(express["static"](__dirname + '/assets'));
      return this.app.listen(8181);
    };

    Express.prototype.stop = function(done) {
      return this.app.close();
    };

    return Express;

  })();

  exports.test = test;

  exports.Express = Express;

}).call(this);
